<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springMvc.dao.MedicalDoctorMapper" >
  <resultMap id="BaseResultMap" type="com.springMvc.entity.po.MedicalDoctor" >
    <id column="md_id" property="mdId" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="in_scheduling" property="inScheduling" jdbcType="BIT" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    md_id, password, name, title, dept_id, in_scheduling, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from medical_doctor
    where md_id = #{mdId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from medical_doctor
    where md_id = #{mdId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springMvc.entity.po.MedicalDoctor" >
    insert into medical_doctor (md_id, password, name, 
      title, dept_id, in_scheduling, 
      deleted)
    values (#{mdId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, #{inScheduling,jdbcType=BIT}, 
      #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.springMvc.entity.po.MedicalDoctor" >
    insert into medical_doctor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mdId != null" >
        md_id,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="inScheduling != null" >
        in_scheduling,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mdId != null" >
        #{mdId,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="inScheduling != null" >
        #{inScheduling,jdbcType=BIT},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springMvc.entity.po.MedicalDoctor" >
    update medical_doctor
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="inScheduling != null" >
        in_scheduling = #{inScheduling,jdbcType=BIT},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where md_id = #{mdId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springMvc.entity.po.MedicalDoctor" >
    update medical_doctor
    set password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      in_scheduling = #{inScheduling,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT}
    where md_id = #{mdId,jdbcType=INTEGER}
  </update>
</mapper>