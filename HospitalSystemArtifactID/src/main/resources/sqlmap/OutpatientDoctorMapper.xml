<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springMvc.dao.OutpatientDoctorMapper" >
  <resultMap id="BaseResultMap" type="com.springMvc.entity.po.OutpatientDoctor" >
    <id column="od_id" property="odId" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="in_scheduling" property="inScheduling" jdbcType="BIT" />
    <result column="regl_code" property="reglCode" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    od_id, password, name, title, dept_id, in_scheduling, regl_code, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from outpatient_doctor
    where od_id = #{odId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from outpatient_doctor
    where od_id = #{odId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springMvc.entity.po.OutpatientDoctor" >
    insert into outpatient_doctor (od_id, password, name, 
      title, dept_id, in_scheduling, 
      regl_code, deleted)
    values (#{odId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, #{inScheduling,jdbcType=BIT}, 
      #{reglCode,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.springMvc.entity.po.OutpatientDoctor" >
    insert into outpatient_doctor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="odId != null" >
        od_id,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="inScheduling != null" >
        in_scheduling,
      </if>
      <if test="reglCode != null" >
        regl_code,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="odId != null" >
        #{odId,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="inScheduling != null" >
        #{inScheduling,jdbcType=BIT},
      </if>
      <if test="reglCode != null" >
        #{reglCode,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springMvc.entity.po.OutpatientDoctor" >
    update outpatient_doctor
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="inScheduling != null" >
        in_scheduling = #{inScheduling,jdbcType=BIT},
      </if>
      <if test="reglCode != null" >
        regl_code = #{reglCode,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where od_id = #{odId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springMvc.entity.po.OutpatientDoctor" >
    update outpatient_doctor
    set password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      in_scheduling = #{inScheduling,jdbcType=BIT},
      regl_code = #{reglCode,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=BIT}
    where od_id = #{odId,jdbcType=INTEGER}
  </update>

  <resultMap id="RegistrationDoctorMap" type="com.springMvc.entity.vo.RegistrationDoctor">
    <id column="od_id" property="odId" javaType="INTEGER"/>
  </resultMap>

  <select id="selectDoctors" resultMap="RegistrationDoctorMap">
    select od_id,
           outpatient_doctor.name as name,
           registration_level.name as reglCode,
           regl_code as reglCode,
           department.name as deptName,
           dept_id as deptId,
           (select count(*)
            from registration
            where state = '未就诊'
              and outpatient_doctor.od_id = registration.od_id) as patNumber,
           limitation
    from registration_level
           join outpatient_doctor using (regl_code)
           join department using (dept_id)
    where dept_id = #{deptId, jdbcType = INTEGER}
      and regl_code = #{reglCode, jdbcType = VARCHAR}
  </select>
</mapper>